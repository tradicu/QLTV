@model IEnumerable<NguoiMuon>
@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/LayoutAdmin.cshtml";
}
@{
    var jsonTienPhatTheoNgay = Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.TienPhatTheoNgay);

}
<div class="row">
    <!-- Tổng số sách mượn Card Example -->
    <div class="col mb-4">
        <div class="card border-left-primary shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col-auto">
                        <i class="fas fa-book fa-2x text-gray-300"></i>
                    </div>
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                            Tổng số đầu sách 
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@ViewBag.TongSoDauSach</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Tổng số phiếu phạt Card Example -->
    <div class="col mb-4">
        <div class="card border-left-success shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col-auto">
                        <i class="fas fa-exclamation-circle fa-2x text-gray-300"></i>
                    </div>
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                            Tổng số phiếu phạt
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@ViewBag.TongSoPhieuPhat</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Tổng số tiền phạt Card Example -->
    <div class="col mb-4">
        <div class="card border-left-info shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col-auto">
                        <i class="fas fa-money-bill-wave fa-2x text-gray-300"></i>
                    </div>
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                            Tổng tiền phạt
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@ViewBag.TongTienPhat.ToString("C0")</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <!-- DataTales Example -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Top 3 người đã mượn sách nhiều nhất</h6>

            

        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                    
                        <thead>
                            <tr>
                                <th>STT</th>
                                <th>Mã người mượn</th>
                                <th>Số lần mượn sách</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (ViewBag.TopNguoiMuon != null)
                            {
                                int stt = 1;
                                foreach (var item in ViewBag.TopNguoiMuon)
                                {
                                    <tr>
                                        <td>@stt</td> <!-- Hiển thị số thứ tự -->
                                        <td>@item.Manguoimuon</td>
                                        <td>@item.SoLanMuon</td>
                                    </tr>
                                    stt++;
                                    <!-- Tăng số thứ tự sau mỗi lần lặp -->
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="3">Không có dữ liệu</td>
                                </tr>
                            }
                        </tbody>
                  


                </table>
            </div>
        </div>
    </div>

</div>
<div class="col-xl-12 col-lg-12">
    <div class="card shadow mb-4">
        <!-- Card Header - Dropdown -->
        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
            <h6 class="m-0 font-weight-bold text-primary">Biểu đồ tiền phạt theo ngày</h6>
        </div>
        <!-- Card Body -->
        <div class="card-body">
            <div class="chart-area">
                <canvas id="myAreaChart"></canvas>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.min.js"></script>
    <script>
        var data = @Html.Raw(jsonTienPhatTheoNgay); // Dữ liệu JSON từ ViewBag

        // Chuyển đổi dữ liệu cho biểu đồ
        var labels = data.map(function (item) {
            var dateParts = item.Ngay.split('-'); // Tách ngày, tháng, năm từ chuỗi (giả sử chuỗi ngày tháng có dạng "yyyy-MM-dd")
            var day = dateParts[2]; // Lấy ngày
            var month = dateParts[1]; // Lấy tháng
            var year = dateParts[0]; // Lấy năm

            return `${day}-${month}-${year}`;
        });

        var tongTienPhats = data.map(function (item) {
            return item.TongTienPhat;
        });

        var ctx = document.getElementById("myAreaChart").getContext('2d');
        var myLineChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: labels,
                datasets: [{
                    label: "Tiền phạt",
                    lineTension: 0.3,
                    backgroundColor: "rgba(78, 115, 223, 0.05)",
                    borderColor: "rgba(78, 115, 223, 1)",
                    pointRadius: 3,
                    pointBackgroundColor: "rgba(78, 115, 223, 1)",
                    pointBorderColor: "rgba(78, 115, 223, 1)",
                    pointHoverRadius: 3,
                    pointHoverBackgroundColor: "rgba(78, 115, 223, 1)",
                    pointHoverBorderColor: "rgba(78, 115, 223, 1)",
                    pointHitRadius: 10,
                    pointBorderWidth: 2,
                    data: tongTienPhats
                }]
            },
            options: {
                maintainAspectRatio: false,
                layout: {
                    padding: {
                        left: 10,
                        right: 25,
                        top: 25,
                        bottom: 0
                    }
                },
                scales: {
                    xAxes: [{
                        time: {
                            unit: 'date'
                        },
                        gridLines: {
                            display: false,
                            drawBorder: false
                        },
                        ticks: {
                            maxTicksLimit: 7
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            maxTicksLimit: 5,
                            padding: 10,
                            // Include a dollar sign in the ticks
                            callback: function (value, index, values) {
                                return '$' + number_format(value);
                            }
                        },
                        gridLines: {
                            color: "rgb(234, 236, 244)",
                            zeroLineColor: "rgb(234, 236, 244)",
                            drawBorder: false,
                            borderDash: [2],
                            zeroLineBorderDash: [2]
                        }
                    }],
                },
                legend: {
                    display: false
                },
                tooltips: {
                    backgroundColor: "rgb(255,255,255)",
                    bodyFontColor: "#858796",
                    titleMarginBottom: 10,
                    titleFontColor: '#6e707e',
                    titleFontSize: 14,
                    borderColor: '#dddfeb',
                    borderWidth: 1,
                    xPadding: 15,
                    yPadding: 15,
                    displayColors: false,
                    intersect: false,
                    mode: 'index',
                    caretPadding: 10,
                    callbacks: {
                        label: function (tooltipItem, chart) {
                            var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                            return datasetLabel + ': $' + number_format(tooltipItem.yLabel);
                        }
                    }
                }
            }
        });

        function number_format(number, decimals, dec_point, thousands_sep) {
            // *     example: number_format(1234.56, 2, '.', ',');
            // *     return: '1,234.56'
            number = (number + '').replace(',', '').replace(' ', '');
            var n = !isFinite(+number) ? 0 : +number,
                prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
                sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
                dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
                s = '',
                toFixedFix = function (n, prec) {
                    var k = Math.pow(10, prec);
                    return '' + Math.round(n * k) / k;
                };
        }
    </script>

    <script>
        // Lấy dữ liệu từ ViewBag và chuyển đổi thành JavaScript objects
        var chartNgaymuon = @Html.Raw(ViewBag.ChartNgaymuon);
        var chartBooksBorrowed = @Html.Raw(ViewBag.ChartBooksBorrowed);
        var chartBooksReturned = @Html.Raw(ViewBag.ChartBooksReturned);

        // Chuyển đổi dữ liệu cho biểu đồ
        var labels = chartNgaymuon.map(function (item) {
            return item; // Chỉnh lại định dạng ngày nếu cần thiết
        });
        console.log("Ngay muon:", chartNgaymuon);
        console.log("Books Borrowed:", chartBooksBorrowed);
        console.log("Books Returned:", chartBooksReturned);
        // Dữ liệu sách mượn
        var dataBooksBorrowed = {
            label: 'Số lượng sách mượn',
            data: chartBooksBorrowed,
            backgroundColor: 'rgba(54, 162, 235, 0.2)',
            borderColor: 'rgba(54, 162, 235, 1)',
            borderWidth: 1
        };

        // Dữ liệu sách trả
        var dataBooksReturned = {
            label: 'Số lượng sách trả',
            data: chartBooksReturned,
            backgroundColor: 'rgba(255, 99, 132, 0.2)',
            borderColor: 'rgba(255, 99, 132, 1)',
            borderWidth: 1
        };

        var ctx = document.getElementById('myChart').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [dataBooksBorrowed, dataBooksReturned]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            precision: 0, // Chỉ hiển thị số nguyên
                            callback: function (value) {
                                if (value % 1 === 0) { // Kiểm tra nếu là số nguyên
                                    return value.toLocaleString();
                                }
                            }
                        }
                    }
                }
            }
        });
    </script>


}

<div class="row">
    <div class="col-md-8">
        <canvas id="myChart" width="400" height="200"></canvas>
    </div>
    <div class="col-md-4">
        
       
    </div>
</div>


    